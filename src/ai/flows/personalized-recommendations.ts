// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Ayurvedic recommendation AI agent.
 *
 * - getAyurvedicRecommendations - A function that handles the Ayurvedic recommendation process.
 * - AyurvedicRecommendationsInput - The input type for the getAyurvedicRecommendations function.
 * - AyurvedicRecommendationsOutput - The return type for the getAyurvedicRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AyurvedicRecommendationsInputSchema = z.object({
  healthCondition: z
    .string()
    .describe('Description of the user health condition.'),
});
export type AyurvedicRecommendationsInput = z.infer<
  typeof AyurvedicRecommendationsInputSchema
>;

const AyurvedicRecommendationsOutputSchema = z.object({
  recommendations: z
    .string()
    .describe('Personalized Ayurvedic recommendations for the user.'),
});
export type AyurvedicRecommendationsOutput = z.infer<
  typeof AyurvedicRecommendationsOutputSchema
>;

export async function getAyurvedicRecommendations(
  input: AyurvedicRecommendationsInput
): Promise<AyurvedicRecommendationsOutput> {
  return getAyurvedicRecommendationsFlow(input);
}

const getAyurvedicRecommendationsPrompt = ai.definePrompt({
  name: 'getAyurvedicRecommendationsPrompt',
  input: {schema: AyurvedicRecommendationsInputSchema},
  output: {schema: AyurvedicRecommendationsOutputSchema},
  prompt: `You are an expert in Ayurvedic medicine. Based on the user's description of their health condition, provide personalized Ayurvedic recommendations.

User's Health Condition: {{{healthCondition}}}`,
});

const getAyurvedicRecommendationsFlow = ai.defineFlow(
  {
    name: 'getAyurvedicRecommendationsFlow',
    inputSchema: AyurvedicRecommendationsInputSchema,
    outputSchema: AyurvedicRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await getAyurvedicRecommendationsPrompt(input);
    return output!;
  }
);
